# На языке Python реализовать функцию, которая быстрее всего
# (по процессорным тикам) отсортирует данный ей массив чисел.
# Массив может быть любого размера со случайным порядком чисел
# (в том числе и отсортированным). Объяснить почему вы считаете,
# что функция соответствует заданным критериям.

def quickSort(nums):
	if nums:
		return quickSort([num for num in nums[1:] if num < nums[0]])\
		+ nums[0:1]\
		+ quickSort([num for num in nums[1:] if num >= nums[0]])

	return []

print(quickSort([4,3,2,1]))

# Если брать самый общий случай начальной сортировки массива,
# то такой вариант наиболее выгодный (учитывая, что под тиком процессора
# грубо считается сравнение (num <>= nums[0])), потому как в лучшем случае
# алгоритм сработает за n тиков, в худшем за n**2, в среднем случае
# (когда массив перемешан) за n * log(n).
# Так как в задании не сказано за эффективность использования памяти,
# применение рекурсии (для читабельности) не наказуемо